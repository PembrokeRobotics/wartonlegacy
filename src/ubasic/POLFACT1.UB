   10   'POLFACT1 VER 2.0
   20   print
   30   print " * Polynomial factorization modulo a prime *"
   40   print " * gives only a decomposition type         *"
   50   print " * use x or X for a variable               *"
   60   print " * example : x^3+2*x^2+3*x+4               *":print
   70   '
   75   console ,,0
   80   strinput "f(x)=";W#
   90   U0#=""
  100   I%=instr2(W#,"xX")
  110   if I% then U0#+=left(W#,I%-1)+"_X":W#=mid(W#,I%+1,*):goto 100
  120   U0#=val(U0#+W#)
  130   print:print "f(X)=";U0#
  140   Autosw%=0
  150   *ModP
  160     print:print "--------------------------------------------"
  170     if Autosw% then P=prm(Autosw%):inc Autosw%:goto 230
  180     input "Mod P=";P
  190     if P=0 then end
  200     :elseif P<0 then Autosw%=-P:goto 170
  210     if P<>prmdiv(P) then print
  220       :print "not a prime":beep:goto *ModP
  230     print "   modulo ";P:print
  240     X#=fnPolfact1(U0#,P):Moji%=65
  250     for I%=1 to len(X#)
  260       W#=member(X#,I%)
  270       print "degree=";using(3),member(W#,1);
  280       print " type= ";
  290       for J%=2 to len(W#)
  300         Rami%=member(W#,J%)
  310         if Rami% then print chr(Moji%);
  320         :if Rami%>1 then print "(";mid(str(Rami%),2,*);")";
  330         inc Moji%
  340       next
  350     print
  360     next
  370     if len(X#)=0 then print " constant"
  380   goto *Modp
  390   '
  400   '
  410   '
  420   *Polfact1(U0#,P)
  430   local I%,Deg%,U#=0,Ans#=pack()
  440   dim Z#(deg(U0#))
  450   modulus=P
  460   for I%=0 to deg(U0#):coeff(U#,I%)=coeff(U0#,I%)@P:next
  470   if deg(U#)<=0 then return(Ans#)
  480   U#=monic(U#):'RemoveConstFactor
  490   '
  500   ' get factors for each degree
  510   '
  520   gosub *MakeZPZ
  530   Deg%=1
  540   *DegreeLoop
  550   X#=fnDegreeFactors
  560   if len(X#) then Ans#+=pack(X#)
  570   if deg(U#)>2*Deg%+1 then gosub *RaiseZPZ:inc Deg%
  580   :goto *DegreeLoop
  590   if deg(U#) then Ans#+=pack(pack(deg(U#),1))
  600   modulus=0
  610   return(Ans#)
  620   '
  630   ' Get number of factors
  640   '
  650   fnDegreeFactors
  660   local DegMem%,DegG%,G#,Ans#:Rami%=0
  670   G#=gcd(U#,Z#):DegG%=deg(G#)
  680   if DegG%=0 then Ans#=pack():goto 820
  690   Ans#=pack(Deg%):DegMem%=DegG%\Deg%
  700   U#\=G#:if res then stop:'system error
  710   G#=gcd(U#,Z#):DegG%=deg(G#)
  720   while deg(G#)
  730     inc Rami%
  740     for I%=1 to DegMem%-DegG%\Deg%:Ans#+=Rami%:next
  750     DegMem%=DegG%\Deg%
  760     U#\=G#:if res then stop:'system error
  770     G#=gcd(U#,Z#):DegG%=deg(G#)
  780   wend
  790   inc Rami%
  800   for I%=1 to DegMem%:Ans#+=Rami%:next
  810   for I%=1 to deg(U#):Z#(I%)@=U#:next
  820   return(Ans#)
  830   '
  840   ' MAKE Z^P-Z
  850   '
  860   *MakeZPZ
  870   local I%,W#
  880   if deg(U#)>P then Z#=_X^P:goto 950
  890   W#=poly(0,1):Z#=poly(1)
  900   for I%=0 to len(P)-2
  910     if bit(I%,P) then Z#=Z#*W#@U#
  920     W#=W#^2@U#
  930   next
  940   Z#=Z#*W#@U#
  950   W#=Z#:Z#(1)=Z#
  960   for I%=2 to deg(U#):W#=W#*Z#@U#:Z#(I%)=W#:next
  970   Z#=(Z#-poly(0,1))@U#
  980   return
  990   '
 1000   ' MAKE Z^(P^deg)-Z
 1010   '
 1020   *RaiseZPZ
 1030   local I%,W#
 1040   W#=Z#+poly(0,1)
 1050   Z#=poly(coeff(W#,0))
 1060   for I%=1 to deg(W#):Z#+=Z#(I%)*coeff(W#,I%):next
 1070   Z#=(Z#-poly(0,1))@U#
 1080   return
